name: Windows RDP (BeeCZ + Ngrok, 6h HARDENED)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"   # auto-rerun every 6 hours

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Enable RDP + Create user (with verification)
      shell: pwsh
      run: |
        # 1) Create admin user BeeCZ
        $user = "BeeCZ"
        $pass = "Bee123!!"
        try { net user $user $pass /add } catch {}
        try { net localgroup administrators $user /add } catch {}

        # 2) Enable RDP
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        New-Item -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Force | Out-Null
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0

        # 3) Open firewall for Remote Desktop
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop" | Out-Null

        # 4) Start TermService and ensure port 3389 is listening
        Set-Service -Name TermService -StartupType Automatic
        Start-Service -Name TermService

        Write-Host "‚è≥ Waiting for RDP to start listening on port 3389..."
        $listening = $false
        for ($i=0; $i -lt 60; $i++) {
          Start-Sleep -Seconds 2
          if (Test-NetConnection -ComputerName 127.0.0.1 -Port 3389 -InformationLevel Quiet) {
            $listening = $true
            break
          }
        }
        if (-not $listening) {
          Write-Error "‚ùå RDP port 3389 not listening after timeout!"
          netstat -ano | findstr ":3389" || $true
          exit 1
        }
        Write-Host "‚úÖ RDP service is active and listening on port 3389."

    - name: Download & setup Ngrok
      shell: pwsh
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath .
        .\ngrok.exe config add-authtoken 30ohlOfgXzLIK3qyF3zX0OWUX9E_2Vz5BaGjNd1XvG1Sn4sUF

    - name: Start Ngrok tunnel and fetch public URL
      shell: pwsh
      run: |
        $log = "ngrok.log"
        if (Test-Path $log) { Remove-Item $log -Force }

        # Launch ngrok TCP tunnel for RDP
        Start-Process -FilePath .\ngrok.exe -ArgumentList 'tcp 3389 --log=stdout --log-format=logfmt' `
          -NoNewWindow -RedirectStandardOutput $log

        Write-Host "‚è≥ Waiting for ngrok to provide a public tunnel URL..."
        $url = $null
        for ($i=0; $i -lt 90; $i++) {
          Start-Sleep -Seconds 1
          if (Test-Path $log) {
            $line = Select-String -Path $log -Pattern 'url=tcp://[^\s"]+' -SimpleMatch:$false | Select-Object -Last 1
            if ($line) {
              $m = [regex]::Match($line.ToString(), 'url=(tcp://[^\s"]+)')
              if ($m.Success) {
                $url = $m.Groups[1].Value
                break
              }
            }
          }
        }

        if (-not $url) {
          Write-Host "‚ùå Failed to obtain ngrok tunnel URL!"
          if (Test-Path $log) { Get-Content $log -Tail 50 }
          exit 1
        }

        Write-Host "====================================="
        Write-Host "‚úÖ RDP TUNNEL: $url"
        Write-Host "üë§ Username : BeeCZ"
        Write-Host "üîí Password : Bee123!!"
        Write-Host "====================================="

        # Add clean summary at top of GitHub job
        "`n## ‚úÖ RDP Tunnel
        **Host:** $($url.Replace('tcp://','').Split(':')[0])  
        **Port:** $($url.Split(':')[-1])  
        **User:** BeeCZ  
        **Pass:** Bee123!!" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append -Encoding utf8

    - name: Keep alive for 6h
      shell: pwsh
      run: |
        Write-Host "üü¢ Keeping VM alive for 6 hours..."
        while ($true) { Start-Sleep -Seconds 30 }
